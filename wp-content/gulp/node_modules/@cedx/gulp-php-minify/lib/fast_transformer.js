"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const child_process_1 = require("child_process");
const net_1 = require("net");
const node_fetch_1 = require("node-fetch");
const path_1 = require("path");
class FastTransformer {
    constructor(_executable = 'php') {
        this._executable = _executable;
        this._port = -1;
        this._process = null;
    }
    get listening() {
        return this._process != null;
    }
    async close() {
        if (!this.listening)
            return;
        this._process.kill();
        this._process = null;
    }
    async listen() {
        if (this.listening)
            return this._port;
        this._port = await this._getPort();
        const args = ['-S', `${FastTransformer.defaultAddress}:${this._port}`, '-t', path_1.join(__dirname, 'php')];
        return new Promise((fulfill, reject) => {
            this._process = child_process_1.spawn(path_1.normalize(this._executable), args);
            this._process.on('error', err => reject(err));
            setTimeout(() => fulfill(this._port), 1000);
        });
    }
    async transform(script) {
        const port = await this.listen();
        const endPoint = new URL(`http://${FastTransformer.defaultAddress}:${port}/server.php`);
        endPoint.searchParams.set('file', path_1.resolve(script));
        const res = await node_fetch_1.default(endPoint.href);
        if (!res.ok)
            throw new Error('An error occurred while transforming the script.');
        return res.text();
    }
    _getPort() {
        return new Promise((fulfill, reject) => {
            const server = net_1.createServer().unref();
            server.on('error', err => reject(err));
            server.listen(0, FastTransformer.defaultAddress, () => {
                const port = server.address().port;
                server.close(() => fulfill(port));
            });
        });
    }
}
FastTransformer.defaultAddress = '127.0.0.1';
exports.FastTransformer = FastTransformer;
//# sourceMappingURL=fast_transformer.js.map