export declare class Finder {
    readonly [Symbol.toStringTag]: string;
    extensions: string[];
    path: string[];
    pathSeparator: string;
    constructor(options?: Partial<FinderOptions>);
    static readonly isWindows: boolean;
    find(command: string): AsyncIterable<string>;
    isExecutable(file: string): Promise<boolean>;
    toString(): string;
    private _checkFileExtension;
    private _checkFilePermissions;
    private _findExecutables;
}
export declare class FinderError extends Error {
    command: string;
    finder: Finder;
    constructor(command: string, finder: Finder, message?: string);
    toString(): string;
}
export interface FinderOptions {
    extensions: string | string[];
    path: string | string[];
    pathSeparator: string;
}
